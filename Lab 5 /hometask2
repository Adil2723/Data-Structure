#include <iostream>
using namespace std;

bool isSafe(int **maze, int x, int y, int n) {
    return (x >= 0 && y >= 0 && x < n && y < n && maze[x][y] == 1);
}

bool solveMaze(int **maze, int x, int y, int n, int **sol) {
    if (x == n - 1 && y == n - 1) {
        sol[x][y] = 1;
        return true;
    }

    if (isSafe(maze, x, y, n)) {
        sol[x][y] = 1;

        if (solveMaze(maze, x + 1, y, n, sol))  
            return true;

        if (solveMaze(maze, x, y + 1, n, sol))  
            return true;

        if (solveMaze(maze, x - 1, y, n, sol)) 
            return true;

        if (solveMaze(maze, x, y - 1, n, sol))  
            return true;

        sol[x][y] = 0; 
        return false;
    }

    return false;
}

int main() {
    int n = 5;
    int mazeArr[5][5] = {
        {1, 0, 1, 0, 1},
        {1, 1, 1, 1, 1},
        {0, 1, 0, 1, 1},
        {1, 0, 0, 1, 1},
        {1, 1, 1, 0, 1}
    };

    int **maze = new int*[n];
    int **sol = new int*[n];
    for (int i = 0; i < n; i++) {
        maze[i] = new int[n];
        sol[i] = new int[n];
        for (int j = 0; j < n; j++) {
            maze[i][j] = mazeArr[i][j];
            sol[i][j] = 0;
        }
    }

    if (solveMaze(maze, 0, 0, n, sol)) {
        cout << " Path Found (Solution Array):\n";
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++)
                cout << sol[i][j] << " ";
            cout << endl;
        }
    } else {
        cout << " No Path Found!" << endl;
    }

    return 0;
}
